/**
 * StackSelector 用的，各种框架，语言
 */
export const COMMON_NAME_TO_FANCY_NAME = {
  curl: 'CURL',
  java: 'Java / Kotlin',
  javascript: 'JavaScript',
  python: 'Python',
  csharp: 'C#',
  swift: 'Swift',
  php: 'PHP',
  apple: 'Apple',
  ios: 'iOS',
  android: 'Android',
  java: 'Java',
  golang: 'Golang',
  'active-directory': 'Active Directory',
  'alipay-mobile': '支付宝',
  'alipay-web': '支付宝网页版',
  apple: 'Apple',
  'azure-ad': 'Azure AD',
  baidu: '百度',
  cas: 'CAS',
  dingtalk: '钉钉',
  github: 'GitHub',
  oidc: 'OpenID Connect',
  qq: 'QQ',
  saml: 'SAML',
  'wechat-mobile': '微信移动端',
  'wechat-mp': '微信网页授权',
  'wechat-pc': '微信扫码登录',
  'wechatwork-corp-qrconnect': '企业微信内建应用扫码登录',
  'wechatwork-service-provider-qrconnect': '企业微信第三方应用扫码登录',
  'wechatwork-service-provider-web': '企业微信第三方应用网页授权登录',
  weibo: '微博',
  sdk: '使用 SDK',
  'hosted-page': '使用托管登录页',
  'embeded-component': '使用嵌入登录组件',
  manually: '手动调用接口',
  dashboard: '使用控制台',
  'wechat-work': '企业微信',
  dingtalk: '钉钉',
  ldap: 'LDAP',
  'active-directory': 'Windows 本地 Active Directory',
  excel: 'Excel',
  createUser: '创建用户',
  deleteUser: '删除用户',
  getUser: '精确查找用户',
  searchUser: '模糊搜索用户',
  listUsers: '获取用户列表',
  login: '登录',
  updateUser: '更新用户资料',
  validatePassword: '验证密码',
  vue: 'Vue.js',
  react: 'React',
  angular: 'Angular',
  'native-javascript': '原生 JavaScript',
  aliyun: '阿里云',
  253: '创蓝253',
  aliyunInt: '阿里云国际',
  mxhichina: "阿里邮箱企业版",
  exmail: '腾讯企业邮箱',
  sendgrid: 'SnedGrid',
  smtp: 'SMTP 邮件服务',
  lark: '飞书'
}

const COMMON_NAME_TO_ICON_NAME = {
  curl: 'authing-curl',
  java: 'authing-bianzu34',
  javascript: 'authing-javascript',
  python: 'authing-python',
  csharp: 'authing-cSharp',
  swift: 'authing-swift',
  php: 'authing-php',
  android: 'authing-android',
  ios: 'authing-ios',
  apple: 'authing-apple-web',
  java: 'authing-bianzu34',
  golang: 'authing-bianzu33',
  'active-directory': 'authing-ad1',
  'alipay-mobile': 'authing-alipay',
  'alipay-web': 'authing-alipay',
  apple: 'authing-apple-web',
  'azure-ad': 'authing-azure',
  baidu: 'authing-baidu',
  cas: 'authing-CAS',
  dingtalk: 'authing-dingtalk',
  github: 'authing-github',
  oidc: 'authing-oidc_logo',
  qq: 'authing-qq',
  saml: 'authing-saml',
  'wechat-mobile': 'authing-wechat-mobile',
  'wechat-mp': 'authing-wechat-pc',
  'wechat-pc': 'authing-wechat-pc',
  'wechatwork-corp-qrconnect': 'authing-wechatwork-corp-qrconnect',
  'wechatwork-service-provider-qrconnect': 'authing-wechatwork-corp-qrconnect',
  'wechatwork-service-provider-web': 'authing-wechatwork-corp-qrconnect',
  weibo: 'authing-weibo',
  sdk: 'authing-sdk',
  'hosted-page': 'authing-login_page',
  'embeded-component': 'authing-component24',
  manually: 'authing-Manually',
  dashboard: 'authing-dasboard',
  'wechat-work': 'authing-wechatwork-corp-qrconnect',
  dingtalk: 'authing-dingtalk',
  ldap: 'authing-ldap1',
  'active-directory': 'authing-ad1',
  excel: 'authing-excel',
  vue: 'authing-vuejs',
  react: 'authing-react',
  angular: 'authing-angular',
  'native-javascript': 'authing-javascript',
  aliyun: 'authing-aliyun',
  253: 'authing-bianzu16',
  aliyunInt: 'authing-aliyun',
  mxhichina: "authing-aliyun",
  exmail: 'authing-tengxunqiyeyouxiang',
  sendgrid: 'authing-bianzu152',
  smtp: 'authing-SMTP',
  lark: 'authing-lark-internal'
}

export const fancify = (framework) =>
  COMMON_NAME_TO_FANCY_NAME[framework] || framework.toUpperCase()
export const iconify = (framework) => COMMON_NAME_TO_ICON_NAME[framework]
export const cssForIcon = (framework) => `icon ${iconify(framework)}`
